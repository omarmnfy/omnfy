[
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "I’m Omar Mnfy, an Egyptian student passionate Computer Science and Data Science student at Pitzer College. With a strong foundation in both fields, I’m always seeking opportunities to blend my technical expertise with real-world applications. Over the past few years, I’ve taken on a variety of roles that have allowed me to dive deep into the world of technology and problem-solving.\n\n\n\n\n\n\n\nMy technical toolkit spans across multiple domains:\n\nProgramming Languages: Python, MATLAB, JavaScript, C, C++, HTML, CSS, R, SQL\nFrameworks: React, Node.js, Bootstrap, WordPress, Flask\nLibraries: Pandas, NumPy, TensorFlow, Scikit-learn, OpenCV, YOLO, Simulink\n\n\n\n\nI currently serve as a Machine Learning Developer at P-ai (Pomona AI) in Claremont, where I apply my skills in AI and data science to real-world challenges. Additionally, I work as an AI Developer at Outlier, a freelance role where I focus on building AI solutions for diverse clients.\nIn the past, I have held roles such as:\n\nProduct Manager at the Randall Lewis Center for Innovation & Entrepreneurship at Claremont McKenna College, where I led projects that bridged technology and innovation.\nData Analyst at the W.M. Keck Science Department, leveraging data to support research and academic initiatives.\nData Engineering Intern at WholeRen, where I developed data pipelines and infrastructure solutions.\n\n\n\n\nMy academic journey has also been marked by a commitment to research, particularly at Sheung Lab, where I focus on innovative projects at the intersection of data science and engineering. I’m constantly pushing the boundaries of what AI and machine learning can do, with a keen interest in natural language processing, computer vision, and ethical AI practices."
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Omar Mnfy",
    "section": "",
    "text": "Welcome to my personal website! I am Omar Mnfy, a sophomore at Pitzer College studying Computer Science and Data Science. I am a data science enthusiast with experience in R, Python, and machine learning."
  },
  {
    "objectID": "index.html#welcome",
    "href": "index.html#welcome",
    "title": "Omar Mnfy",
    "section": "",
    "text": "Welcome to my personal website! I am Omar Mnfy, a sophomore at Pitzer College studying Computer Science and Data Science. I am a data science enthusiast with experience in R, Python, and machine learning."
  },
  {
    "objectID": "dataviz.html",
    "href": "dataviz.html",
    "title": "Data Viz",
    "section": "",
    "text": "TidyTuesday Data Source\n\n\nThis section will load the data and create a scatter plot that compares the number of turns to player ranking. It will help explore how the duration of chess games varies based on the players’ ratings.\n\n# Load necessary libraries\nlibrary(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.1\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\nlibrary(ggplot2)\n\n# Load the chess dataset using tidytuesdayR\ntuesdata &lt;- tidytuesdayR::tt_load('2024-10-01')\n\n---- Compiling #TidyTuesday Information for 2024-10-01 ----\n--- There is 1 file available ---\n\n\n── Downloading files ───────────────────────────────────────────────────────────\n\n  1 of 1: \"chess.csv\"\n\nchess &lt;- tuesdata$chess\n\n# Data Cleaning\nchess_clean &lt;- chess %&gt;%\n  mutate(average_rating = (white_rating + black_rating) / 2)\n\n# Visualization: Scatter Plot of Game Turns vs Average Rating\nggplot(chess_clean, aes(x = average_rating, y = turns)) +\n  geom_point(alpha = 0.5, color = \"blue\") +\n  labs(\n    title = \"Scatter Plot of Chess Game Turns vs Average Player Rating\",\n    x = \"Average Player Rating\",\n    y = \"Number of Turns\",\n    caption = \"Source: Lichess dataset via TidyTuesday, 2024-10-01\"\n  ) +\n  theme_minimal()"
  },
  {
    "objectID": "dataviz.html#welcome",
    "href": "dataviz.html#welcome",
    "title": "Omar Mnfy",
    "section": "",
    "text": "Welcome to my personal website! I am Omar Mnfy, a sophomore at Pitzer College studying Computer Science and Data Science. I am a data science enthusiast with experience in R, Python, and machine learning"
  },
  {
    "objectID": "index.html#contact",
    "href": "index.html#contact",
    "title": "Omar Mnfy",
    "section": "Contact",
    "text": "Contact\n\nEmail: omarmnfy [at] gmail [dot] com\nLocation: Claremont, CA"
  },
  {
    "objectID": "index.html#personal-website-github-repository",
    "href": "index.html#personal-website-github-repository",
    "title": "Omar Mnfy",
    "section": "Personal Website GitHub Repository",
    "text": "Personal Website GitHub Repository\nIf you are interested to see my personal website GitHub’s repository, please click on “Website GitHub Repository”."
  },
  {
    "objectID": "about.html#about-me",
    "href": "about.html#about-me",
    "title": "About",
    "section": "",
    "text": "I’m Omar Mnfy, an Egyptian student passionate Computer Science and Data Science student at Pitzer College. With a strong foundation in both fields, I’m always seeking opportunities to blend my technical expertise with real-world applications. Over the past few years, I’ve taken on a variety of roles that have allowed me to dive deep into the world of technology and problem-solving.\n\n\n\n\n\n\n\nMy technical toolkit spans across multiple domains:\n\nProgramming Languages: Python, MATLAB, JavaScript, C, C++, HTML, CSS, R, SQL\nFrameworks: React, Node.js, Bootstrap, WordPress, Flask\nLibraries: Pandas, NumPy, TensorFlow, Scikit-learn, OpenCV, YOLO, Simulink\n\n\n\n\nI currently serve as a Machine Learning Developer at P-ai (Pomona AI) in Claremont, where I apply my skills in AI and data science to real-world challenges. Additionally, I work as an AI Developer at Outlier, a freelance role where I focus on building AI solutions for diverse clients.\nIn the past, I have held roles such as:\n\nProduct Manager at the Randall Lewis Center for Innovation & Entrepreneurship at Claremont McKenna College, where I led projects that bridged technology and innovation.\nData Analyst at the W.M. Keck Science Department, leveraging data to support research and academic initiatives.\nData Engineering Intern at WholeRen, where I developed data pipelines and infrastructure solutions.\n\n\n\n\nMy academic journey has also been marked by a commitment to research, particularly at Sheung Lab, where I focus on innovative projects at the intersection of data science and engineering. I’m constantly pushing the boundaries of what AI and machine learning can do, with a keen interest in natural language processing, computer vision, and ethical AI practices."
  },
  {
    "objectID": "dataviz.html#tidytuesday-analysis-1-chess-game-dataset-lichess",
    "href": "dataviz.html#tidytuesday-analysis-1-chess-game-dataset-lichess",
    "title": "Data Viz",
    "section": "",
    "text": "TidyTuesday Data Source\n\n\nThis section will load the data and create a scatter plot that compares the number of turns to player ranking. It will help explore how the duration of chess games varies based on the players’ ratings.\n\n# Load necessary libraries\nlibrary(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.1\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\nlibrary(ggplot2)\n\n# Load the chess dataset using tidytuesdayR\ntuesdata &lt;- tidytuesdayR::tt_load('2024-10-01')\n\n---- Compiling #TidyTuesday Information for 2024-10-01 ----\n--- There is 1 file available ---\n\n\n── Downloading files ───────────────────────────────────────────────────────────\n\n  1 of 1: \"chess.csv\"\n\nchess &lt;- tuesdata$chess\n\n# Data Cleaning\nchess_clean &lt;- chess %&gt;%\n  mutate(average_rating = (white_rating + black_rating) / 2)\n\n# Visualization: Scatter Plot of Game Turns vs Average Rating\nggplot(chess_clean, aes(x = average_rating, y = turns)) +\n  geom_point(alpha = 0.5, color = \"blue\") +\n  labs(\n    title = \"Scatter Plot of Chess Game Turns vs Average Player Rating\",\n    x = \"Average Player Rating\",\n    y = \"Number of Turns\",\n    caption = \"Source: Lichess dataset via TidyTuesday, 2024-10-01\"\n  ) +\n  theme_minimal()"
  },
  {
    "objectID": "dataviz.html#tidytuesday-analysis-2-super-bowl-commercials-dataset",
    "href": "dataviz.html#tidytuesday-analysis-2-super-bowl-commercials-dataset",
    "title": "Data Viz",
    "section": "TidyTuesday Analysis 2: Super Bowl Commercials Dataset",
    "text": "TidyTuesday Analysis 2: Super Bowl Commercials Dataset\n\nTidyTuesday Data Source\n\n\nCode for Data Processing and Visualization\nThis visualization will focus on analyzing the relationship between Super Bowl commercial view counts and the presence of celebrities in the ad. This code generate a boxplot that shows whether ads featuring celebrities get more views.\n\n# Load necessary libraries\nlibrary(tidyverse)\nlibrary(ggplot2)\n\n# Load the Super Bowl dataset\ntuesdata &lt;- tidytuesdayR::tt_load('2021-03-02')\n\n---- Compiling #TidyTuesday Information for 2021-03-02 ----\n--- There is 1 file available ---\n\n\n── Downloading files ───────────────────────────────────────────────────────────\n\n  1 of 1: \"youtube.csv\"\n\nyoutube &lt;- tuesdata$youtube\n\n# Data Cleaning\nyoutube_clean &lt;- youtube %&gt;%\n  filter(!is.na(view_count)) %&gt;%\n  mutate(celebrity_presence = ifelse(celebrity == TRUE, \"Celebrity\", \"No Celebrity\"))\n\n# Visualization: Boxplot of View Count based on Celebrity Presence\nggplot(youtube_clean, aes(x = celebrity_presence, y = view_count, fill = celebrity_presence)) +\n  geom_boxplot() +\n  scale_y_log10() +  # Log scale for better visualization\n  labs(\n    title = \"Super Bowl Ad View Count by Celebrity Presence\",\n    x = \"Celebrity Presence in Ad\",\n    y = \"View Count (Log Scale)\",\n    caption = \"Source: Superbowl Commercials dataset via TidyTuesday, 2021-03-02\"\n  ) +\n  theme_minimal() +\n  theme(legend.position = \"none\")"
  },
  {
    "objectID": "mini-project-2.html",
    "href": "mini-project-2.html",
    "title": "Mini Project 2",
    "section": "",
    "text": "# Load the package\nlibrary(RTextTools)\n\nLoading required package: SparseM\n\n# Load the NYTimes dataset\ndata(NYTimes)\n\n# Load the tibble package\nlibrary(tibble)\n\n# Convert the NYTimes dataset to a tibble\nnytimes_data &lt;- as_tibble(NYTimes)\n\n# Check the structure of the dataset\nstr(nytimes_data)\n\ntibble [3,104 × 5] (S3: tbl_df/tbl/data.frame)\n $ Article_ID: int [1:3104] 41246 41257 41268 41279 41290 41302 41314 41333 41344 41355 ...\n $ Date      : Factor w/ 3099 levels \"1-Apr-00\",\"1-Apr-01\",..: 42 1156 2268 2524 2626 2830 2934 140 236 341 ...\n $ Title     : Factor w/ 3076 levels \"$58 BILLION DEAL TO UNITE 2 GIANTS OF U.S. BANKING\",..: 1895 1090 1726 2797 476 2426 376 477 1361 2691 ...\n $ Subject   : Factor w/ 3036 levels \"\\\"concierge\\\" medicine and its effect on the health care system\",..: 938 604 445 192 169 2699 2268 2042 2081 1983 ...\n $ Topic.Code: int [1:3104] 12 20 20 19 1 19 1 1 20 15 ...\n\n\n\n\n\n\n# View the first few rows of the dataset\nhead(nytimes_data)\n\n# A tibble: 6 × 5\n  Article_ID Date     Title                                   Subject Topic.Code\n       &lt;int&gt; &lt;fct&gt;    &lt;fct&gt;                                   &lt;fct&gt;        &lt;int&gt;\n1      41246 1-Jan-96 Nation's Smaller Jails Struggle To Cop… Jails …         12\n2      41257 2-Jan-96 FEDERAL IMPASSE SADDLING STATES WITH I… Federa…         20\n3      41268 3-Jan-96 Long, Costly Prelude Does Little To Al… Conten…         20\n4      41279 4-Jan-96 Top Leader of the Bosnian Serbs Now Un… Bosnia…         19\n5      41290 5-Jan-96 BATTLE OVER THE BUDGET: THE OVERVIEW; … Battle…          1\n6      41302 7-Jan-96 South African Democracy Stumbles on Ol… politi…         19\n\n# Check the structure of the dataset\nstr(nytimes_data)\n\ntibble [3,104 × 5] (S3: tbl_df/tbl/data.frame)\n $ Article_ID: int [1:3104] 41246 41257 41268 41279 41290 41302 41314 41333 41344 41355 ...\n $ Date      : Factor w/ 3099 levels \"1-Apr-00\",\"1-Apr-01\",..: 42 1156 2268 2524 2626 2830 2934 140 236 341 ...\n $ Title     : Factor w/ 3076 levels \"$58 BILLION DEAL TO UNITE 2 GIANTS OF U.S. BANKING\",..: 1895 1090 1726 2797 476 2426 376 477 1361 2691 ...\n $ Subject   : Factor w/ 3036 levels \"\\\"concierge\\\" medicine and its effect on the health care system\",..: 938 604 445 192 169 2699 2268 2042 2081 1983 ...\n $ Topic.Code: int [1:3104] 12 20 20 19 1 19 1 1 20 15 ...\n\n# Get a summary of the dataset\nsummary(nytimes_data)\n\n   Article_ID           Date                                        Title     \n Min.   : 5469   10-Feb-00:   2   CRISIS IN THE BALKANS: THE OVERVIEW; :   6  \n 1st Qu.:21845   18-Nov-02:   2   TESTING OF A PRESIDENT: THE OVERVIEW;:   5  \n Median :29658   24-Jan-01:   2   INTERNATIONAL BUSINESS;              :   4  \n Mean   :28855   29-Sep-99:   2   STANDOFF WITH IRAQ: THE OVERVIEW;    :   3  \n 3rd Qu.:37446   3-Jan-97 :   2   TERROR IN LITTLETON: THE OVERVIEW;   :   3  \n Max.   :45722   1-Apr-00 :   1   BASEBALL PLAYOFFS                    :   2  \n                 (Other)  :3093   (Other)                              :3081  \n                 Subject       Topic.Code   \n baseball            :  10   Min.   : 1.00  \n priest abuse scandal:   7   1st Qu.:12.00  \n Enron scandal       :   5   Median :17.00  \n olympics            :   5   Mean   :16.59  \n tennis              :   4   3rd Qu.:20.00  \n 2000 campaign       :   3   Max.   :99.00  \n (Other)             :3070                  \n\n\n\n\n\n\nlibrary(stringr)\n\n# 1. Count the number of headlines that contain the word \"politics\"\npolitics_count &lt;- sum(str_detect(nytimes_data$Title, \"politics\"), na.rm = TRUE)\ncat(\"Number of headlines containing 'politics':\", politics_count)\n\nNumber of headlines containing 'politics': 0\n\n# 2. Remove punctuation from headlines\nnytimes_data$clean_headlines &lt;- str_replace_all(nytimes_data$Title, \"[[:punct:]]\", \"\")\nhead(nytimes_data$clean_headlines)\n\n[1] \"Nations Smaller Jails Struggle To Cope With Surge in Inmates\"                    \n[2] \"FEDERAL IMPASSE SADDLING STATES WITH INDECISION\"                                 \n[3] \"Long Costly Prelude Does Little To Alter Plot of Presidential Race\"              \n[4] \"Top Leader of the Bosnian Serbs Now Under Attack From Within\"                    \n[5] \"BATTLE OVER THE BUDGET THE OVERVIEW LEADERS IN HOUSE DROP GOP PLAN ON US WORKERS\"\n[6] \"South African Democracy Stumbles on Old Rivalry\"                                 \n\n# 3. Extract the first word of each headline\nnytimes_data$first_word &lt;- str_extract(nytimes_data$Title, \"\\\\b\\\\w+\\\\b\")\nhead(nytimes_data$first_word)\n\n[1] \"Nation\"  \"FEDERAL\" \"Long\"    \"Top\"     \"BATTLE\"  \"South\"  \n\n\n\n\n\n\nlibrary(stringr)\n\n# 1. Count the number of headlines that contain numbers\nnytimes_data$has_numbers &lt;- str_detect(nytimes_data$Title, \"\\\\d+\")\nnum_with_numbers &lt;- sum(nytimes_data$has_numbers, na.rm = TRUE)\ncat(\"Number of headlines containing numbers:\", num_with_numbers, \"\\n\")\n\nNumber of headlines containing numbers: 409 \n\n# 2. Check for broader keywords like \"Race\" or \"Budget\"\nnytimes_data$contains_race &lt;- str_detect(nytimes_data$Title, \"Race\")\nnytimes_data$contains_budget &lt;- str_detect(nytimes_data$Title, \"Budget\")\n\n# Summarize counts\nnum_with_race &lt;- sum(nytimes_data$contains_race, na.rm = TRUE)\nnum_with_budget &lt;- sum(nytimes_data$contains_budget, na.rm = TRUE)\ncat(\"Number of headlines containing 'Race':\", num_with_race, \"\\n\")\n\nNumber of headlines containing 'Race': 36 \n\ncat(\"Number of headlines containing 'Budget':\", num_with_budget, \"\\n\")\n\nNumber of headlines containing 'Budget': 12 \n\n# 3. Search for any mention of years from 1990 to 2020\nnytimes_data$contains_year &lt;- str_detect(nytimes_data$Title, \"19[0-9]{2}|20[0-2][0-9]\")\nnum_with_year &lt;- sum(nytimes_data$contains_year, na.rm = TRUE)\ncat(\"Number of headlines containing years from 1990-2020:\", num_with_year, \"\\n\")\n\nNumber of headlines containing years from 1990-2020: 68 \n\n\n\n\n(a) Bar Plot of Word Frequency:\n\nlibrary(ggplot2)\n\n# Create a data frame for the keyword counts\nkeyword_data &lt;- data.frame(\n  Keyword = c(\"Numbers\", \"Race\", \"Budget\", \"Year (1990-2020)\"),\n  Count = c(num_with_numbers, num_with_race, num_with_budget, num_with_year)\n)\n\n# Create a bar plot\nggplot(keyword_data, aes(x = Keyword, y = Count, fill = Keyword)) +\n  geom_bar(stat = \"identity\") +\n  labs(title = \"Keyword Frequency in NY Times Headlines\",\n       x = \"Keyword\", y = \"Number of Headlines\") +\n  theme_minimal() +\n  theme(legend.position = \"none\")\n\n\n\n\n\n\n\n\nPlot Description: Plot (a) highlights the prominence of numbers and certain keywords in the headlines.\n(b) Pie Chart of Headlines Containing Numbers:\n\n# Create a data frame for the pie chart\nnumber_data &lt;- data.frame(\n  Category = c(\"Contains Numbers\", \"Doesn't Contain Numbers\"),\n  Count = c(num_with_numbers, nrow(nytimes_data) - num_with_numbers)\n)\n\n# Create the pie chart\nggplot(number_data, aes(x = \"\", y = Count, fill = Category)) +\n  geom_bar(stat = \"identity\", width = 1) +\n  coord_polar(\"y\") +\n  labs(title = \"Proportion of Headlines Containing Numbers\") +\n  theme_void() +\n  theme(legend.title = element_blank())\n\n\n\n\n\n\n\n\nPlot Description: Plot (b) highlights the prominence of numbers and certain keywords in the headlines.\n(c) Line Plot of Year Mentions (1990-2005)\n\n# Extract the mentioned years from headlines (1990-2005\nnytimes_data$mentioned_year &lt;- str_extract(nytimes_data$Title, \"19[0-9]{2}|20[0-2][0-9]\")\n\n# Convert the mentioned_year column to a factor for plotting\nnytimes_data$mentioned_year &lt;- factor(nytimes_data$mentioned_year, levels = as.character(1990:2005))\n\n# Filter out any missing or irrelevant years outside the range (1990-2005)\nfiltered_year_data &lt;- nytimes_data[!is.na(nytimes_data$mentioned_year), ]\n\n# Count the number of mentions of each year\nyear_count &lt;- table(filtered_year_data$mentioned_year)\n\n# Convert the table to a data frame for plotting\nyear_count_df &lt;- as.data.frame(year_count)\ncolnames(year_count_df) &lt;- c(\"Year\", \"Count\")\n\n# Create a line plot showing year mentions over time (1990-2005)\nggplot(year_count_df, aes(x = Year, y = Count)) +\n  geom_line(group = 1, color = \"blue\", size = 1) +\n  geom_point(color = \"red\", size = 2) +\n  labs(title = \"Mentions of Years in NY Times Headlines (1990-2005)\",\n       x = \"Year\", y = \"Number of Mentions\") +\n  theme_minimal()\n\nWarning: Using `size` aesthetic for lines was deprecated in ggplot2 3.4.0.\nℹ Please use `linewidth` instead.\n\n\n\n\n\n\n\n\n\nPlot Description: Plot (c) provides a historical view of how frequently different years were mentioned in headlines."
  },
  {
    "objectID": "mini-project-2.html#about-me",
    "href": "mini-project-2.html#about-me",
    "title": "Mini Project 2",
    "section": "",
    "text": "I’m Omar Mnfy, an Egyptian student passionate Computer Science and Data Science student at Pitzer College. With a strong foundation in both fields, I’m always seeking opportunities to blend my technical expertise with real-world applications. Over the past few years, I’ve taken on a variety of roles that have allowed me to dive deep into the world of technology and problem-solving.\n\n\n\n\n\n\n\nMy technical toolkit spans across multiple domains:\n\nProgramming Languages: Python, MATLAB, JavaScript, C, C++, HTML, CSS, R, SQL\nFrameworks: React, Node.js, Bootstrap, WordPress, Flask\nLibraries: Pandas, NumPy, TensorFlow, Scikit-learn, OpenCV, YOLO, Simulink\n\n\n\n\nI currently serve as a Machine Learning Developer at P-ai (Pomona AI) in Claremont, where I apply my skills in AI and data science to real-world challenges. Additionally, I work as an AI Developer at Outlier, a freelance role where I focus on building AI solutions for diverse clients.\nIn the past, I have held roles such as:\n\nProduct Manager at the Randall Lewis Center for Innovation & Entrepreneurship at Claremont McKenna College, where I led projects that bridged technology and innovation.\nData Analyst at the W.M. Keck Science Department, leveraging data to support research and academic initiatives.\nData Engineering Intern at WholeRen, where I developed data pipelines and infrastructure solutions.\n\n\n\n\nMy academic journey has also been marked by a commitment to research, particularly at Sheung Lab, where I focus on innovative projects at the intersection of data science and engineering. I’m constantly pushing the boundaries of what AI and machine learning can do, with a keen interest in natural language processing, computer vision, and ethical AI practices."
  },
  {
    "objectID": "mini-project-2.html#step-1-load-the-dataset-converting-it-to-a-tibble-for-easier-manipulation",
    "href": "mini-project-2.html#step-1-load-the-dataset-converting-it-to-a-tibble-for-easier-manipulation",
    "title": "Mini Project 2",
    "section": "",
    "text": "# Load the package\nlibrary(RTextTools)\n\nLoading required package: SparseM\n\n# Load the NYTimes dataset\ndata(NYTimes)\n\n# Load the tibble package\nlibrary(tibble)\n\n# Convert the NYTimes dataset to a tibble\nnytimes_data &lt;- as_tibble(NYTimes)\n\n# Check the structure of the dataset\nstr(nytimes_data)\n\ntibble [3,104 × 5] (S3: tbl_df/tbl/data.frame)\n $ Article_ID: int [1:3104] 41246 41257 41268 41279 41290 41302 41314 41333 41344 41355 ...\n $ Date      : Factor w/ 3099 levels \"1-Apr-00\",\"1-Apr-01\",..: 42 1156 2268 2524 2626 2830 2934 140 236 341 ...\n $ Title     : Factor w/ 3076 levels \"$58 BILLION DEAL TO UNITE 2 GIANTS OF U.S. BANKING\",..: 1895 1090 1726 2797 476 2426 376 477 1361 2691 ...\n $ Subject   : Factor w/ 3036 levels \"\\\"concierge\\\" medicine and its effect on the health care system\",..: 938 604 445 192 169 2699 2268 2042 2081 1983 ...\n $ Topic.Code: int [1:3104] 12 20 20 19 1 19 1 1 20 15 ..."
  },
  {
    "objectID": "mini-project-2.html#step-2-exploring-the-dataset",
    "href": "mini-project-2.html#step-2-exploring-the-dataset",
    "title": "Mini Project 2",
    "section": "",
    "text": "# View the first few rows of the dataset\nhead(nytimes_data)\n\n# A tibble: 6 × 5\n  Article_ID Date     Title                                   Subject Topic.Code\n       &lt;int&gt; &lt;fct&gt;    &lt;fct&gt;                                   &lt;fct&gt;        &lt;int&gt;\n1      41246 1-Jan-96 Nation's Smaller Jails Struggle To Cop… Jails …         12\n2      41257 2-Jan-96 FEDERAL IMPASSE SADDLING STATES WITH I… Federa…         20\n3      41268 3-Jan-96 Long, Costly Prelude Does Little To Al… Conten…         20\n4      41279 4-Jan-96 Top Leader of the Bosnian Serbs Now Un… Bosnia…         19\n5      41290 5-Jan-96 BATTLE OVER THE BUDGET: THE OVERVIEW; … Battle…          1\n6      41302 7-Jan-96 South African Democracy Stumbles on Ol… politi…         19\n\n# Check the structure of the dataset\nstr(nytimes_data)\n\ntibble [3,104 × 5] (S3: tbl_df/tbl/data.frame)\n $ Article_ID: int [1:3104] 41246 41257 41268 41279 41290 41302 41314 41333 41344 41355 ...\n $ Date      : Factor w/ 3099 levels \"1-Apr-00\",\"1-Apr-01\",..: 42 1156 2268 2524 2626 2830 2934 140 236 341 ...\n $ Title     : Factor w/ 3076 levels \"$58 BILLION DEAL TO UNITE 2 GIANTS OF U.S. BANKING\",..: 1895 1090 1726 2797 476 2426 376 477 1361 2691 ...\n $ Subject   : Factor w/ 3036 levels \"\\\"concierge\\\" medicine and its effect on the health care system\",..: 938 604 445 192 169 2699 2268 2042 2081 1983 ...\n $ Topic.Code: int [1:3104] 12 20 20 19 1 19 1 1 20 15 ...\n\n# Get a summary of the dataset\nsummary(nytimes_data)\n\n   Article_ID           Date                                        Title     \n Min.   : 5469   10-Feb-00:   2   CRISIS IN THE BALKANS: THE OVERVIEW; :   6  \n 1st Qu.:21845   18-Nov-02:   2   TESTING OF A PRESIDENT: THE OVERVIEW;:   5  \n Median :29658   24-Jan-01:   2   INTERNATIONAL BUSINESS;              :   4  \n Mean   :28855   29-Sep-99:   2   STANDOFF WITH IRAQ: THE OVERVIEW;    :   3  \n 3rd Qu.:37446   3-Jan-97 :   2   TERROR IN LITTLETON: THE OVERVIEW;   :   3  \n Max.   :45722   1-Apr-00 :   1   BASEBALL PLAYOFFS                    :   2  \n                 (Other)  :3093   (Other)                              :3081  \n                 Subject       Topic.Code   \n baseball            :  10   Min.   : 1.00  \n priest abuse scandal:   7   1st Qu.:12.00  \n Enron scandal       :   5   Median :17.00  \n olympics            :   5   Mean   :16.59  \n tennis              :   4   3rd Qu.:20.00  \n 2000 campaign       :   3   Max.   :99.00  \n (Other)             :3070"
  },
  {
    "objectID": "mini-project-2.html#step-3-analysis-using-string-functions",
    "href": "mini-project-2.html#step-3-analysis-using-string-functions",
    "title": "Mini Project 2",
    "section": "",
    "text": "library(stringr)\n\n# 1. Count the number of headlines that contain the word \"politics\"\npolitics_count &lt;- sum(str_detect(nytimes_data$Title, \"politics\"), na.rm = TRUE)\ncat(\"Number of headlines containing 'politics':\", politics_count)\n\nNumber of headlines containing 'politics': 0\n\n# 2. Remove punctuation from headlines\nnytimes_data$clean_headlines &lt;- str_replace_all(nytimes_data$Title, \"[[:punct:]]\", \"\")\nhead(nytimes_data$clean_headlines)\n\n[1] \"Nations Smaller Jails Struggle To Cope With Surge in Inmates\"                    \n[2] \"FEDERAL IMPASSE SADDLING STATES WITH INDECISION\"                                 \n[3] \"Long Costly Prelude Does Little To Alter Plot of Presidential Race\"              \n[4] \"Top Leader of the Bosnian Serbs Now Under Attack From Within\"                    \n[5] \"BATTLE OVER THE BUDGET THE OVERVIEW LEADERS IN HOUSE DROP GOP PLAN ON US WORKERS\"\n[6] \"South African Democracy Stumbles on Old Rivalry\"                                 \n\n# 3. Extract the first word of each headline\nnytimes_data$first_word &lt;- str_extract(nytimes_data$Title, \"\\\\b\\\\w+\\\\b\")\nhead(nytimes_data$first_word)\n\n[1] \"Nation\"  \"FEDERAL\" \"Long\"    \"Top\"     \"BATTLE\"  \"South\""
  },
  {
    "objectID": "mini-project-2.html#step-4-regular-expressions",
    "href": "mini-project-2.html#step-4-regular-expressions",
    "title": "Mini Project 2",
    "section": "",
    "text": "library(stringr)\n\n# 1. Count the number of headlines that contain numbers\nnytimes_data$has_numbers &lt;- str_detect(nytimes_data$Title, \"\\\\d+\")\nnum_with_numbers &lt;- sum(nytimes_data$has_numbers, na.rm = TRUE)\ncat(\"Number of headlines containing numbers:\", num_with_numbers, \"\\n\")\n\nNumber of headlines containing numbers: 409 \n\n# 2. Check for broader keywords like \"Race\" or \"Budget\"\nnytimes_data$contains_race &lt;- str_detect(nytimes_data$Title, \"Race\")\nnytimes_data$contains_budget &lt;- str_detect(nytimes_data$Title, \"Budget\")\n\n# Summarize counts\nnum_with_race &lt;- sum(nytimes_data$contains_race, na.rm = TRUE)\nnum_with_budget &lt;- sum(nytimes_data$contains_budget, na.rm = TRUE)\ncat(\"Number of headlines containing 'Race':\", num_with_race, \"\\n\")\n\nNumber of headlines containing 'Race': 36 \n\ncat(\"Number of headlines containing 'Budget':\", num_with_budget, \"\\n\")\n\nNumber of headlines containing 'Budget': 12 \n\n# 3. Search for any mention of years from 1990 to 2020\nnytimes_data$contains_year &lt;- str_detect(nytimes_data$Title, \"19[0-9]{2}|20[0-2][0-9]\")\nnum_with_year &lt;- sum(nytimes_data$contains_year, na.rm = TRUE)\ncat(\"Number of headlines containing years from 1990-2020:\", num_with_year, \"\\n\")\n\nNumber of headlines containing years from 1990-2020: 68 \n\n\n\n\n(a) Bar Plot of Word Frequency:\n\nlibrary(ggplot2)\n\n# Create a data frame for the keyword counts\nkeyword_data &lt;- data.frame(\n  Keyword = c(\"Numbers\", \"Race\", \"Budget\", \"Year (1990-2020)\"),\n  Count = c(num_with_numbers, num_with_race, num_with_budget, num_with_year)\n)\n\n# Create a bar plot\nggplot(keyword_data, aes(x = Keyword, y = Count, fill = Keyword)) +\n  geom_bar(stat = \"identity\") +\n  labs(title = \"Keyword Frequency in NY Times Headlines\",\n       x = \"Keyword\", y = \"Number of Headlines\") +\n  theme_minimal() +\n  theme(legend.position = \"none\")\n\n\n\n\n\n\n\n\nPlot Description: Plot (a) highlights the prominence of numbers and certain keywords in the headlines.\n(b) Pie Chart of Headlines Containing Numbers:\n\n# Create a data frame for the pie chart\nnumber_data &lt;- data.frame(\n  Category = c(\"Contains Numbers\", \"Doesn't Contain Numbers\"),\n  Count = c(num_with_numbers, nrow(nytimes_data) - num_with_numbers)\n)\n\n# Create the pie chart\nggplot(number_data, aes(x = \"\", y = Count, fill = Category)) +\n  geom_bar(stat = \"identity\", width = 1) +\n  coord_polar(\"y\") +\n  labs(title = \"Proportion of Headlines Containing Numbers\") +\n  theme_void() +\n  theme(legend.title = element_blank())\n\n\n\n\n\n\n\n\nPlot Description: Plot (b) highlights the prominence of numbers and certain keywords in the headlines.\n(c) Line Plot of Year Mentions (1990-2005)\n\n# Extract the mentioned years from headlines (1990-2005\nnytimes_data$mentioned_year &lt;- str_extract(nytimes_data$Title, \"19[0-9]{2}|20[0-2][0-9]\")\n\n# Convert the mentioned_year column to a factor for plotting\nnytimes_data$mentioned_year &lt;- factor(nytimes_data$mentioned_year, levels = as.character(1990:2005))\n\n# Filter out any missing or irrelevant years outside the range (1990-2005)\nfiltered_year_data &lt;- nytimes_data[!is.na(nytimes_data$mentioned_year), ]\n\n# Count the number of mentions of each year\nyear_count &lt;- table(filtered_year_data$mentioned_year)\n\n# Convert the table to a data frame for plotting\nyear_count_df &lt;- as.data.frame(year_count)\ncolnames(year_count_df) &lt;- c(\"Year\", \"Count\")\n\n# Create a line plot showing year mentions over time (1990-2005)\nggplot(year_count_df, aes(x = Year, y = Count)) +\n  geom_line(group = 1, color = \"blue\", size = 1) +\n  geom_point(color = \"red\", size = 2) +\n  labs(title = \"Mentions of Years in NY Times Headlines (1990-2005)\",\n       x = \"Year\", y = \"Number of Mentions\") +\n  theme_minimal()\n\nWarning: Using `size` aesthetic for lines was deprecated in ggplot2 3.4.0.\nℹ Please use `linewidth` instead.\n\n\n\n\n\n\n\n\n\nPlot Description: Plot (c) provides a historical view of how frequently different years were mentioned in headlines."
  },
  {
    "objectID": "iteration-project-3.html",
    "href": "iteration-project-3.html",
    "title": "Iteration Project 3",
    "section": "",
    "text": "Simulate chess games between players of varying ratings to estimate the probability of different outcomes (win, lose, or draw) for the player playing White based on their rating difference with the opponent. This task is non-trivial because chess outcomes are strongly influenced by skill ratings, making the probabilities complex to estimate.\n\n\n\n\nChoose a Subset of the Data:\n\nUse the TidyTuesday Chess Games dataset to filter for games with clear player ratings and outcomes.\n\nDefine Simulation Rules:\n\nUse player ratings to probabilistically determine outcomes. For instance, a player with a higher rating has a higher chance of winning.\n\nUse a Simulation Function:\n\nDefine a function that simulates a game based on a given rating difference.\n\nRun Simulations with map():\n\nUse map() to repeat the game simulation for a range of rating differences.\n\nCreate a Plot:\n\nVisualize the estimated probability of each outcome (win, lose, or draw) for White as the rating difference changes."
  },
  {
    "objectID": "iteration-project-3.html#estimating-the-probability-of-winning-a-dice-game-with-non-uniform-dice",
    "href": "iteration-project-3.html#estimating-the-probability-of-winning-a-dice-game-with-non-uniform-dice",
    "title": "Iteration Project 3",
    "section": "",
    "text": "In this scenario, we’ll estimate the probability of winning a dice game where each player has a different type of loaded die. This is a non-trivial problem because the dice have varying probabilities for each face, making the outcome difficult to calculate analytically.\n\n\n\nObjective: Estimate the probability of each player winning when using non-uniform dice.\nDetails:\n\nPlayer 1 uses a die where the probability of rolling a 6 is twice that of other faces.\nPlayer 2 uses a die where the probability of rolling a 1 or 2 is lower, and other values are equally likely.\n\nSimulation Steps:\n\nDefine a function to simulate one roll for each player with their unique probability distributions.\nUse map() to repeat the simulation multiple times.\nVisualize the probability distribution of wins.\n\nPlot and Analysis: Create a plot showing the winning probability distribution for each player and interpret the results."
  },
  {
    "objectID": "iteration-project-3.html#step-1-define-the-simulation-function",
    "href": "iteration-project-3.html#step-1-define-the-simulation-function",
    "title": "Iteration Project 3",
    "section": "Step 1: Define the Simulation Function",
    "text": "Step 1: Define the Simulation Function\n\n# Load libraries\nlibrary(dplyr)\nlibrary(purrr)\nlibrary(ggplot2)\n\n# Function to simulate one roll for each player\nsimulate_dice_roll &lt;- function() {\n  # Define Player 1's die probabilities (higher chance for 6)\n  player1_probs &lt;- c(1/7, 1/7, 1/7, 1/7, 1/7, 2/7)\n  player1_roll &lt;- sample(1:6, 1, prob = player1_probs)\n  \n  # Define Player 2's die probabilities (lower chance for 1 and 2)\n  player2_probs &lt;- c(1/10, 1/10, 2/10, 2/10, 2/10, 2/10)\n  player2_roll &lt;- sample(1:6, 1, prob = player2_probs)\n  \n  # Determine winner\n  if (player1_roll &gt; player2_roll) {\n    return(\"Player 1 Wins\")\n  } else if (player2_roll &gt; player1_roll) {\n    return(\"Player 2 Wins\")\n  } else {\n    return(\"Tie\")\n  }\n}\n\n\nStep 2: Simulate the Game Multiple Times\nNow, let’s run the simulation 10,000 times to get reliable probability estimates.\n\n# Run 10,000 simulations\nset.seed(42)\nresults &lt;- map_chr(1:10000, ~ simulate_dice_roll())\n\n# Summarize results\nresults_summary &lt;- table(results) / 10000\nresults_summary_df &lt;- as.data.frame(results_summary)\ncolnames(results_summary_df) &lt;- c(\"Outcome\", \"Probability\")"
  },
  {
    "objectID": "iteration-project-3.html#step-3-create-the-plot",
    "href": "iteration-project-3.html#step-3-create-the-plot",
    "title": "Iteration Project 3",
    "section": "Step 3: Create the Plot",
    "text": "Step 3: Create the Plot\nPlotting the probability distribution of outcomes to visualize who wins more frequently.\n\n# Plot the results\nggplot(results_summary_df, aes(x = Outcome, y = Probability, fill = Outcome)) +\n  geom_bar(stat = \"identity\") +\n  labs(\n    title = \"Winning Probabilities with Non-Uniform Dice\",\n    x = \"Game Outcome\",\n    y = \"Probability\"\n  ) +\n  theme_minimal()"
  },
  {
    "objectID": "iteration-project-3.html#step-4-insight-and-analysis",
    "href": "iteration-project-3.html#step-4-insight-and-analysis",
    "title": "Iteration Project 3",
    "section": "Step 4: Insight and Analysis",
    "text": "Step 4: Insight and Analysis\nThis plot reveals the probability distribution of game outcomes. By simulating the loaded dice game, we can see the advantage held by Player 1 due to their increased probability of rolling a 6, even as Player 2 has a balanced but slightly disadvantaged setup. This analysis highlights how non-uniform probability distributions affect win probabilities in competitive games."
  },
  {
    "objectID": "iteration-project-3.html#project-1-estimating-the-probability-of-game-outcomes-in-chess-based-on-player-ratings",
    "href": "iteration-project-3.html#project-1-estimating-the-probability-of-game-outcomes-in-chess-based-on-player-ratings",
    "title": "Iteration Project 3",
    "section": "",
    "text": "Simulate chess games between players of varying ratings to estimate the probability of different outcomes (win, lose, or draw) for the player playing White based on their rating difference with the opponent. This task is non-trivial because chess outcomes are strongly influenced by skill ratings, making the probabilities complex to estimate.\n\n\n\n\nChoose a Subset of the Data:\n\nUse the TidyTuesday Chess Games dataset to filter for games with clear player ratings and outcomes.\n\nDefine Simulation Rules:\n\nUse player ratings to probabilistically determine outcomes. For instance, a player with a higher rating has a higher chance of winning.\n\nUse a Simulation Function:\n\nDefine a function that simulates a game based on a given rating difference.\n\nRun Simulations with map():\n\nUse map() to repeat the game simulation for a range of rating differences.\n\nCreate a Plot:\n\nVisualize the estimated probability of each outcome (win, lose, or draw) for White as the rating difference changes."
  },
  {
    "objectID": "iteration-project-3.html#step-1-load-and-filter-the-dataset",
    "href": "iteration-project-3.html#step-1-load-and-filter-the-dataset",
    "title": "Iteration Project 3",
    "section": "Step 1: Load and Filter the Dataset",
    "text": "Step 1: Load and Filter the Dataset\n\n# Load libraries\nlibrary(purrr)\nlibrary(ggplot2)\nlibrary(readr)\nsuppressPackageStartupMessages(library(dplyr))\n\n\n\n# Read data directly from GitHub\nchess &lt;- read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2024/2024-10-01/chess.csv', show_col_types = FALSE)\n\n# Filter the data for games with both player ratings and results\nchess_filtered &lt;- chess %&gt;%\n  filter(!is.na(white_rating) & !is.na(black_rating) & !is.na(winner)) %&gt;%\n  mutate(rating_diff = white_rating - black_rating)"
  },
  {
    "objectID": "iteration-project-3.html#step-2-define-the-simulation-function",
    "href": "iteration-project-3.html#step-2-define-the-simulation-function",
    "title": "Iteration Project 3",
    "section": "Step 2: Define the Simulation Function",
    "text": "Step 2: Define the Simulation Function\nThe function will simulate the outcome of a game based on the rating difference.\n\nsimulate_chess_game &lt;- function(rating_diff) {\n  # Define win probabilities based on rating difference\n  # Using Elo-based probabilities where larger positive rating_diff favors White\n  win_prob &lt;- 1 / (1 + 10^(-rating_diff / 400))\n  draw_prob &lt;- 0.15  # Assuming 15% of games end in a draw\n\n  # Randomly determine the outcome\n  outcome &lt;- runif(1)\n  if (outcome &lt; win_prob) {\n    return(\"White Wins\")\n  } else if (outcome &lt; win_prob + draw_prob) {\n    return(\"Draw\")\n  } else {\n    return(\"Black Wins\")\n  }\n}"
  },
  {
    "objectID": "iteration-project-3.html#step-3-run-simulations-with-map",
    "href": "iteration-project-3.html#step-3-run-simulations-with-map",
    "title": "Iteration Project 3",
    "section": "Step 3: Run Simulations with map()",
    "text": "Step 3: Run Simulations with map()\nNow, we’ll simulate multiple games across a range of rating differences to capture the probability distribution.\n\n# Define rating differences to simulate\nrating_diffs &lt;- seq(-400, 400, by = 50)  # Rating differences from -400 to 400\n\n# Run simulations for each rating difference\nset.seed(42)\nsimulation_results &lt;- map_df(rating_diffs, function(diff) {\n  outcomes &lt;- map_chr(1:1000, ~ simulate_chess_game(diff))\n  outcome_summary &lt;- table(outcomes) / 1000\n  data.frame(\n    rating_diff = diff,\n    outcome = names(outcome_summary),\n    probability = as.numeric(outcome_summary)\n  )\n})"
  },
  {
    "objectID": "iteration-project-3.html#step-4-plot-the-simulation-results",
    "href": "iteration-project-3.html#step-4-plot-the-simulation-results",
    "title": "Iteration Project 3",
    "section": "Step 4: Plot the Simulation Results",
    "text": "Step 4: Plot the Simulation Results\nWe can now plot the probabilities of each outcome as a function of the rating difference.\n\n# Plot the results\nggplot(simulation_results, aes(x = rating_diff, y = probability, color = outcome)) +\n  geom_line(linewidth = 1.2) +\n  labs(\n    title = \"Probability of Chess Game Outcomes Based on Rating Difference\",\n    x = \"Rating Difference (White - Black)\",\n    y = \"Probability\",\n    color = \"Outcome\"\n  ) +\n  theme_minimal()"
  },
  {
    "objectID": "iteration-project-3.html#step-5-insights",
    "href": "iteration-project-3.html#step-5-insights",
    "title": "Iteration Project 3",
    "section": "Step 5: Insights",
    "text": "Step 5: Insights\nThe plot will show the probabilities of White winning, drawing, or losing as a function of the rating difference. We would expect:\n\nHigher rating differences (favoring White) to lead to a higher probability of White winning.\nClose to zero rating difference might yield more draws.\nNegative rating differences (favoring Black) should increase Black’s win probability."
  },
  {
    "objectID": "iteration-project-3.html#project-2-estimating-the-probability-of-winning-a-dice-game-with-non-uniform-dice",
    "href": "iteration-project-3.html#project-2-estimating-the-probability-of-winning-a-dice-game-with-non-uniform-dice",
    "title": "Iteration Project 3",
    "section": "Project 2: Estimating the Probability of Winning a Dice Game with Non-Uniform Dice",
    "text": "Project 2: Estimating the Probability of Winning a Dice Game with Non-Uniform Dice\nIn this scenario, we’ll estimate the probability of winning a dice game where each player has a different type of loaded die. This is a non-trivial problem because the dice have varying probabilities for each face, making the outcome difficult to calculate analytically.\n\nProject Outline\n\nObjective: Estimate the probability of each player winning when using non-uniform dice.\nDetails:\n\nPlayer 1 uses a die where the probability of rolling a 6 is twice that of other faces.\nPlayer 2 uses a die where the probability of rolling a 1 or 2 is lower, and other values are equally likely.\n\nSimulation Steps:\n\nDefine a function to simulate one roll for each player with their unique probability distributions.\nUse map() to repeat the simulation multiple times.\nVisualize the probability distribution of wins.\n\nPlot and Analysis: Create a plot showing the winning probability distribution for each player and interpret the results."
  },
  {
    "objectID": "iteration-project-3.html#data-source",
    "href": "iteration-project-3.html#data-source",
    "title": "Iteration Project 3",
    "section": "Data Source",
    "text": "Data Source\nThis analysis uses the Chess Game Dataset (Lichess), sourced from Lichess.org via Kaggle by Mitchell J., and curated by Havisha Khurana for the TidyTuesday project. The dataset contains over 20,000 chess games played on Lichess.org and includes information on player ratings, game outcomes, moves, and other game attributes.\nThe data can be accessed through the TidyTuesday repository on GitHub: TidyTuesday Chess Dataset (2024-10-01)."
  },
  {
    "objectID": "iteration-project-3.html#data-dictionary",
    "href": "iteration-project-3.html#data-dictionary",
    "title": "Iteration Project 3",
    "section": "Data Dictionary",
    "text": "Data Dictionary\n\ngame_id: Game ID\nrated: Rated (T/F)\nstart_time: Start time\nend_time: End time\nturns: Number of turns\nvictory_status: Game status\nwinner: Winner\ntime_increment: Time increment\nwhite_id: White player ID\nwhite_rating: White player rating\nblack_id: Black player ID\nblack_rating: Black player rating\nmoves: All Moves in Standard Chess Notation\nopening_eco: Opening Eco (Standardized Code for any given opening)\nopening_name: Opening Name\nopening_ply: Number of moves in the opening phase"
  }
]