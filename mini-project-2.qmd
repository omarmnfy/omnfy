---
title: "Mini Project 2"
---

# Text Analysis of NY Times Headlines

**Objective:**\
The purpose of this mini-project is to perform a text analysis of headlines from the New York Times using the `RTextTools` package in R. We analyze various aspects of the dataset, including keyword occurrences, the presence of years, and other patterns. Finally, we visualize the insights gained from the analysis.

**Data Source:**\
The dataset comes from the `RTextTools` package in R, specifically the **NYTimes** dataset.

## Step 1: Load the Dataset & Converting it to a Tibble for Easier Manipulation

We begin by loading the **NYTimes** dataset, a collection of headlines, and converting it to a tibble format for easier manipulation using the `tibble` package.

```{r loading-dataset}
# Load the package
library(RTextTools)
library(ggplot2)

# Load the NYTimes dataset
data(NYTimes)

# Load the tibble package
library(tibble)

# Convert the NYTimes dataset to a tibble
nytimes_data <- as_tibble(NYTimes)
```

## Step 2: Exploring the Dataset

We explore the dataset to understand its structure, content, and basic statistics. This includes viewing the first few rows, examining the dataset's structure, and summarizing its columns.

```{r exploring-dataset}
# View the first few rows of the dataset
head(nytimes_data)

```

## Step 3: Analysis Using String Functions

We apply string processing techniques to analyze and transform the headlines:

1.  **Counting Occurrences of a Word:** We count the number of headlines containing the word "politics."

2.  **Removing Punctuation:** To clean the dataset, we remove punctuation from the headlines.

3.  **Extracting the First Word:** We extract the first word from each headline for further analysis.

```{r}
library(stringr)

# 1. Count the number of headlines that contain the word "politics"
politics_count <- sum(str_detect(nytimes_data$Title, "politics"), na.rm = TRUE)
cat("Number of headlines containing 'politics':", politics_count)

# 2. Remove punctuation from headlines
nytimes_data$clean_headlines <- str_replace_all(nytimes_data$Title, "[[:punct:]]", "")
head(nytimes_data$clean_headlines)

# 3. Extract the first word of each headline
nytimes_data$first_word <- str_extract(nytimes_data$Title, "\\b\\w+\\b")
head(nytimes_data$first_word)
```

## Step 4: Regular Expressions

Using regular expressions, we search for specific patterns:

1.  **Headlines Containing Numbers:** We count how many headlines include numeric values.

2.  **Specific Keywords ("Race" and "Budget"):** We identify how often these terms appear in headlines.

3.  **Mentioned Years (1990–2020):** We search for years mentioned in headlines from 1990 to 2020.

```{r}
library(stringr)

# 1. Count the number of headlines that contain numbers
nytimes_data$has_numbers <- str_detect(nytimes_data$Title, "\\d+")
num_with_numbers <- sum(nytimes_data$has_numbers, na.rm = TRUE)
cat("Number of headlines containing numbers:", num_with_numbers, "\n")

# 2. Check for broader keywords like "Race" or "Budget"
nytimes_data$contains_race <- str_detect(nytimes_data$Title, "Race")
nytimes_data$contains_budget <- str_detect(nytimes_data$Title, "Budget")

# Summarize counts
num_with_race <- sum(nytimes_data$contains_race, na.rm = TRUE)
num_with_budget <- sum(nytimes_data$contains_budget, na.rm = TRUE)
cat("Number of headlines containing 'Race':", num_with_race, "\n")
cat("Number of headlines containing 'Budget':", num_with_budget, "\n")

# 3. Search for any mention of years from 1990 to 2020
nytimes_data$contains_year <- str_detect(nytimes_data$Title, "19[0-9]{2}|20[0-2][0-9]")
num_with_year <- sum(nytimes_data$contains_year, na.rm = TRUE)
cat("Number of headlines containing years from 1990-2020:", num_with_year, "\n")
```

### Step 5: Visualization

**(a) Bar Plot of Word Frequency**:

This plot displays the frequency of specific keywords in the headlines, including numbers, "Race," "Budget," and years (1990–2020).

```{r}
library(ggplot2)

# Create a data frame for the keyword counts
keyword_data <- data.frame(
  Keyword = c("Numbers", "Race", "Budget", "Year (1990-2020)"),
  Count = c(num_with_numbers, num_with_race, num_with_budget, num_with_year)
)

# Create a bar plot
ggplot(keyword_data, aes(x = Keyword, y = Count, fill = Keyword)) +
  geom_bar(stat = "identity") +
  labs(title = "Keyword Frequency in NY Times Headlines",
       x = "Keyword", y = "Number of Headlines") +
  theme_minimal() +
  theme(legend.position = "none")
```

**Plot (a) highlights the prominence of numbers and certain keywords in the headlines.**

**Alt Text:** A bar plot showing the frequency of specific keywords in NY Times headlines. The bars represent "Numbers," "Race," "Budget," and "Year (1990–2020)," with the heights proportional to the count. The "Numbers" keyword has the highest count, while "Budget" has the lowest.

**(b) Pie Chart of Headlines Containing Numbers:**

This pie chart represents the proportion of headlines containing numeric values versus those that do not.

```{r}
# Create a data frame for the pie chart
number_data <- data.frame(
  Category = c("Contains Numbers", "Doesn't Contain Numbers"),
  Count = c(num_with_numbers, nrow(nytimes_data) - num_with_numbers)
)

# Create the pie chart
ggplot(number_data, aes(x = "", y = Count, fill = Category)) +
  geom_bar(stat = "identity", width = 1) +
  coord_polar("y") +
  labs(title = "Proportion of Headlines Containing Numbers") +
  theme_void() +
  theme(legend.title = element_blank())

```

**Plot (b) highlights the prominence of numbers and certain keywords in the headlines.**

**Alt Text:** A pie chart depicting the proportion of NY Times headlines containing numbers. One segment represents headlines with numbers (larger segment), while the other shows headlines without numbers (smaller segment).

**(c) Line Plot of Year Mentions (1990-2005)**

This line plot shows the frequency of mentions of specific years (1990–2005) in the headlines, providing a temporal view.

```{r}
# Extract the mentioned years from headlines (1990-2005)
nytimes_data$mentioned_year <- str_extract(nytimes_data$Title, "19[0-9]{2}|20[0-2][0-9]")

# Convert the mentioned_year column to a factor for plotting
nytimes_data$mentioned_year <- factor(nytimes_data$mentioned_year, levels = as.character(1990:2005))

# Filter out any missing or irrelevant years outside the range (1990-2005)
filtered_year_data <- nytimes_data[!is.na(nytimes_data$mentioned_year), ]

# Count the number of mentions of each year
year_count <- table(filtered_year_data$mentioned_year)

# Convert the table to a data frame for plotting
year_count_df <- as.data.frame(year_count)
colnames(year_count_df) <- c("Year", "Count")

# Create a line plot showing year mentions over time (1990-2005)
ggplot(year_count_df, aes(x = Year, y = Count)) +
  geom_line(group = 1, color = "blue", linewidth = 1) +
  geom_point(color = "red", size = 2) +  # Replaced 'linewidth' with 'size'
  labs(title = "Mentions of Years in NY Times Headlines (1990-2005)",
       x = "Year", y = "Number of Mentions") +
  theme_minimal()
```

**Plot (c) provides a historical view of how frequently different years were mentioned in headlines.**

**Alt Text:** A line plot displaying the number of NY Times headlines mentioning each year from 1990 to 2005. The x-axis represents the years, while the y-axis indicates the count. The trend shows varying mentions with peaks at certain years.

### **Conclusion**

This project demonstrates the power of R for textual analysis, allowing us to uncover patterns in news headlines and visualize them effectively. Each step builds on the previous one, culminating in informative plots that summarize our findings.

**Citation:**\
Dataset: `NYTimes` dataset from the `RTextTools` package in R.
